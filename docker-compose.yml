services:
  redis:
    image: "redis:latest"
    container_name: lcp-redis
    networks:
      - lcp-network

  db:
    build: ./database
    container_name: lcp-postgres
    env_file: .env.docker
    volumes:
      - ./database/init-db:/docker-entrypoint-initdb.d
    ports:
      - "15432:5432"
    networks:
      - lcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: lcp-worker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./media/:/opt/media/
      - ./uploads:/app/uploads
    networks:
      - lcp-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: lcp-backend
    ports:
      - "9090:9090"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./media/:/opt/media/
      - ./uploads:/app/uploads
    networks:
      - lcp-network

  frontend_prod:
    build: ./frontend
    profiles: [""]
    container_name: lcp-web
    depends_on:
      - worker
      - backend
    volumes:
      - ./media/:/opt/media/
    ports:
      - "8080:80"
    networks:
      - lcp-network

  frontend_dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    profiles: ["dev"]
    container_name: lcp-frontend-dev
    command: ["yarn", "serve:lcp"]
    depends_on:
      - worker
      - backend
    volumes:
      - ./frontend:/app
    ports:
      - "8080:8080"
    networks:
      - lcp-network

networks:
  lcp-network:
    driver: bridge
